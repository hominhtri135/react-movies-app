{"version":3,"file":"static/js/46.36d5c50f.chunk.js","mappings":"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","sources":["components/loading/MovieItemLoading.js","components/movie/MovieCard.js","pages/MoviePage.js"],"sourcesContent":["import React from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nconst MovieItemLoading = () => {\r\n  return (\r\n    <SkeletonTheme baseColor=\"#878b94\" highlightColor=\"#b7b9bf\">\r\n      <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n        <Skeleton className=\"w-full h-[350px] object-cover rounded-lg mb-5\"></Skeleton>\r\n        <div className=\"flex flex-col flex-1\">\r\n          <h3 className=\"text-xl font-bold mb-3\">\r\n            <Skeleton height={30}></Skeleton>\r\n          </h3>\r\n          <div className=\"flex items-center justify-between text-sm opacity-50 mb-5 \">\r\n            <Skeleton width={34} height={20}></Skeleton>\r\n            <Skeleton width={18} height={20}></Skeleton>\r\n          </div>\r\n          <Skeleton width={276} height={48}></Skeleton>\r\n        </div>\r\n      </div>\r\n    </SkeletonTheme>\r\n  );\r\n};\r\n\r\nexport default MovieItemLoading;\r\n","import Button from \"components/button/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { tmdbAPI } from \"apiConfig/config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <img\r\n        src={\r\n          poster_path ? tmdbAPI.image500(poster_path) : tmdbAPI.imageDefault()\r\n        }\r\n        alt=\"\"\r\n        className=\"w-full h-[350px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-5 \">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button onClick={() => navigate(`/movie/${id}`)}>Watch now</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieCard.propsTypes = {\r\n  item: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    release_date: PropTypes.string,\r\n    poster_path: PropTypes.string,\r\n    id: PropTypes.number,\r\n  }),\r\n};\r\n\r\nfunction FallbackComponent() {\r\n  return (\r\n    <p className=\"bg-red-50 text-red-400\">\r\n      Something went wrong with this component\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default withErrorBoundary(MovieCard, { FallbackComponent });\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetcher, tmdbAPI } from \"apiConfig/config\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard from \"components/movie/MovieCard\";\r\nimport { debounce } from \"lodash\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport MovieItemLoading from \"components/loading/MovieItemLoading\";\r\n\r\nconst MoviePage = () => {\r\n  const [nextPage, setNextPage] = useState(1);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [url, setUrl] = useState(tmdbAPI.getMovieList(\"popular\", nextPage));\r\n\r\n  const { data, isLoading } = useSWR(url, fetcher);\r\n\r\n  useEffect(() => {\r\n    if (filter) {\r\n      setUrl(tmdbAPI.getMovieSearch(filter, nextPage));\r\n    } else {\r\n      setUrl(tmdbAPI.getMovieList(\"popular\", nextPage));\r\n    }\r\n  }, [filter, nextPage]);\r\n\r\n  const movies = data?.results || [];\r\n  const total_pages = data\r\n    ? data.results.length > 0\r\n      ? data.total_pages <= 500\r\n        ? data.total_pages\r\n        : 500\r\n      : 0\r\n    : 0;\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n    setNextPage(1);\r\n  };\r\n\r\n  const handlePageClick = (event) => {\r\n    setNextPage(event.selected + 1);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-10 page-container\">\r\n      <div className=\"flex mb-10\">\r\n        <div className=\"flex-1\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full p-4 bg-slate-800 text-white outline-none\"\r\n            placeholder=\"Type here to search...\"\r\n            defaultValue={filter}\r\n            onChange={debounce(handleFilterChange, 500)}\r\n          />\r\n        </div>\r\n        <button className=\"p-4 bg-primary text-white\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-6 h-6\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      {/* {isLoading && (\r\n        <div className=\"w-10 h-10 rounded-full border-4 border-primary border-t-transparent border-t-4 mx-auto animate-spin\"></div>\r\n      )} */}\r\n      <div className=\"grid grid-cols-4 gap-10\">\r\n        {isLoading &&\r\n          new Array(8)\r\n            .fill(0)\r\n            .map((item, index) => (\r\n              <MovieItemLoading key={index}></MovieItemLoading>\r\n            ))}\r\n        {!isLoading &&\r\n          movies.length > 0 &&\r\n          movies.map((movie) => (\r\n            <MovieCard item={movie} key={movie.id}></MovieCard>\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"mt-10\">\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={3}\r\n          pageCount={total_pages}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          className=\"pagination\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"names":["_jsx","SkeletonTheme","baseColor","highlightColor","children","_jsxs","className","Skeleton","height","width","MovieCard","_ref","item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","src","tmdbAPI","image500","imageDefault","alt","Date","getFullYear","Button","onClick","concat","propsTypes","PropTypes","withErrorBoundary","FallbackComponent","_useState","useState","_useState2","_slicedToArray","nextPage","setNextPage","_useState3","_useState4","filter","setFilter","_useState5","getMovieList","_useState6","url","setUrl","_useSWR","useSWR","fetcher","data","isLoading","useEffect","getMovieSearch","movies","results","total_pages","length","type","placeholder","defaultValue","onChange","debounce","e","target","value","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","Array","map","index","MovieItemLoading","movie","ReactPaginate","breakLabel","nextLabel","onPageChange","event","selected","window","scrollTo","top","behavior","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount"],"sourceRoot":""}